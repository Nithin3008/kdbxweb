name: 'üî® Build ‚Ä∫ CI'
run-name: 'üî® Build ‚Ä∫ CI'

on:

    # #
    #   Trigger ‚Ä∫ Workflow Dispatch
    #
    #   If any values are not provided, will use fallback env variable
    # #

    workflow_dispatch:
        inputs:

            # #
            #   Name of the plugin to use when creating the release zip / exe filename
            #     e.g: kdbxweb-v1.0.0.zip
            # #

            PLUGIN_NAME:
                description:  "üì¶ Name of App"
                required:     true
                default:      'kdbxweb'
                type:         string

    # #
    #   Trigger ‚Ä∫ Push
    # #

    push:
        branches:
            - master
            - main
        tags:
            - '*'

    # #
    #   Trigger ‚Ä∫ Pull Requests
    # #

    pull_request:

# #
#   Environment Vars
#
#   PLUGIN_NAME                 This is the project name used in Cloudflare.
# #

env:
    PLUGIN_NAME:            ${{ github.event.inputs.PLUGIN_NAME || 'kdbxweb' }}
    BOT_NAME_1:             EuropaServ
    BOT_NAME_DEPENDABOT:    dependabot[bot]

# #
#   Jobs
# #

jobs:
    job-ci:
        runs-on: ubuntu-latest
        steps:

            # #
            #   CI ‚Ä∫ Start
            # #

            - name: '‚úÖ Start'
              id: task_ci_start
              run: |
                  echo "Starting linter"

            # #
            #   CI ‚Ä∫ Checkout
            # #

            - name: '‚úÖ Checkout'
              id: task_ci_checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   CI ‚Ä∫ Setup Node
            # #

            - name: '‚öôÔ∏è Setup Node'
              id: task_ci_node_setup
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'

            # #
            #   CI ‚Ä∫ Node Clean Install
            # #

            - name: 'üïõ NPM ‚Ä∫ Clean Install'
              id: task_ci_npm_install
              run: |
                  npm ci

            # #
            #   CI ‚Ä∫ Build
            # #

            - name: 'üî® NPM ‚Ä∫ Build'
              id: task_ci_npm_build
              run: npm start

            # #
            #   CI ‚Ä∫ Tests ‚Ä∫ Coveralls
            # #

            - name: 'üß™ Tests ‚Ä∫ Submit Coveralls'
              id: task_ci_tests_coverage
              uses: coverallsapp/github-action@master
              if: ${{ !startsWith(github.ref, 'refs/tags/') }}
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

            # #
            #   CI ‚Ä∫ NPM ‚Ä∫ Publish
            # #

            - name: 'üì¶ NPM ‚Ä∫ Publish'
              id: task_ci_npm_publish
              if: ${{ startsWith(github.ref, 'refs/tags/') }}
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
